experiment:
  # It contains all the about the grids and the group of runs:
  name: LabelAnything # name for the tracker experiment
  group: COCO20i # name of group of experiments for the logger platform
  continue_with_errors: False # continue with other runs even if a run fails
  start_from_grid: 0 # skip grids in the grid search
  start_from_run: 0 # skip runs from the selected grid

parameters:
  # Contains the parameters to build the grid.
  # Each value should be a dict or a list
  seed: [42]

  val_params:
    reruns: [5]

  logger:
    log_frequency: [10]
    train_image_log_frequency: [100000]
    val_image_log_frequency: [500]
    tmp_dir: [tmp]
    entity: [cilabuniba]
    tags: [[ViTMAE, emb256, Validation]]
    offline_directory: [offline]

  model:
    name: [panet]
    pretrained_path: [checkpoints/panet/coco/fold0_1shot.pth]

  dataset: # parameters depending on the class you defined for the dataset
    datasets:
      val_coco20i_N1K1: &val_coco20i_N1K1
        name: [coco]
        instances_path: &instance_dir [data/coco/annotations/instances_val2014.json]
        emb_dir: &emb_dir [data/coco/embeddings_vit_mae_480]
        img_dir: &img_dir [data/coco/train_val_2017]
        split: ["val"]
        val_fold_idx: [0]
        n_folds: [4]
        n_shots: [1]
        n_ways: [1]
        do_subsample: [False]
        add_box_noise: [False]
      val_coco20i_N2K1:
        <<: *val_coco20i_N1K1
        n_ways: [2]
      val_coco20i_N1K5:
        <<: *val_coco20i_N1K1
        n_shots: [5]
      val_coco20i_N2K5:
        <<: *val_coco20i_N1K1
        n_ways: [2]
        n_shots: [5]
    common:
      remove_small_annotations: [True]
      do_subsample: [False]
      add_box_noise: [True]
      max_points_annotations: [70]
      max_points_per_annotation: [10]
      load_gts: [False]
      image_size: *image_size
      custom_preprocess: [False]
  dataloader:
    num_workers: [32]
    prefetch_factor: [2]
    possible_batch_example_nums: [[[2, 1, 4], [2, 4, 2], [2, 1, 2], [4, 2, 2], [4, 4, 1], [16, 1, 1]]]
    val_possible_batch_example_nums: [[[2, 1]]] 
    prompt_types: [["point", "bbox", "mask"]]
    prompt_choice_level: [["episode"]]
    val_prompt_types: [["mask"]]

other_grids:
  - dataset: # parameters depending on the class you defined for the dataset
      datasets:
        val_coco20i_N1K1:
          val_fold_idx: [1]
        val_coco20i_N1K5:
          val_fold_idx: [1]
        val_coco20i_N2K1:
          val_fold_idx: [1]
        val_coco20i_N2K5:
          val_fold_idx: [1]
    model:
      pretrained_path: [checkpoints/panet/coco/fold1_1shot.pth]
  - dataset: # parameters depending on the class you defined for the dataset
      datasets:
        val_coco20i_N1K1:
          val_fold_idx: [2]
        val_coco20i_N1K5:
          val_fold_idx: [2]
        val_coco20i_N2K1:
          val_fold_idx: [2]
        val_coco20i_N2K5:
          val_fold_idx: [2]
    model:
      pretrained_path: [checkpoints/panet/coco/fold2_1shot.pth]
  - dataset: # parameters depending on the class you defined for the dataset
      datasets:
        val_coco20i_N1K1:
          val_fold_idx: [3]
        val_coco20i_N1K5:
          val_fold_idx: [3]
        val_coco20i_N2K1:
          val_fold_idx: [3]
        val_coco20i_N2K5:
          val_fold_idx: [3]
    model:
      pretrained_path: [checkpoints/panet/coco/fold3_1shot.pth]