
experiment:
  # It contains all the about the grids and the group of runs:
  name: LabelAnything # name of the logger platform experiment
  group: pascal5i # name of group of experiments for the logger platform
  continue_with_errors: False # continue with other runs even if a run fails
  start_from_grid: 0 # skip grids in the grid search
  start_from_run: 0 # skip runs from the selected grid

parameters:
  # Contains the parameters to build the grid.
  # Each value should be a dict or a list
  seed: [42]

  val_params:
    reruns: [5]

  logger:
    log_frequency: [100]
    train_image_log_frequency: [250]
    val_image_log_frequency: [25]
    tmp_dir: [tmp]
    entity: [cilabuniba]
    tags: [[MAE, Validation]]
    offline_directory: [offline]

  model:
    name: [lam_mae_b] # path to model class or model name contained in EzDL or super-gradients
    spatial_convs: [3]
    class_attention: [False]
    example_attention: [False]
    example_class_attention: [False]
    fusion_transformer: [TwoWayTransformer]
    image_embed_dim: [768]
    embed_dim: &embed_dim [256]
    image_size: &image_size [480]
    checkpoint: [checkpoints/pascal/fold0_mae_5juz3bim.safetensors]
    ignore_encoder_checkpoint: [true]

  dataset: # parameters depending on the class you defined for the dataset
    datasets:
      test_weedmap:
        train_root: [../Datasets/WeedMap/0_rotations_processed_003_test/RedEdge/000]
        test_root: [../Datasets/WeedMap/0_rotations_processed_003_test/RedEdge/003]
        prompt_images: [[
                # List of selected images from the training set
                "frame0009_2.png",
                "frame0020_2.png",
                "frame0021_2.png",
                "frame0033_3.png",
                "frame0034_1.png",
                "frame0048_0.png",
                "frame0048_1.png",
                "frame0049_0.png",
                "frame0073_3.png",
                "frame0183_1.png",
                "frame0157_3.png",
                "frame0197_0.png",
            ]]
        remove_black_images: [false]
    common:
      image_size: [480]
      custom_preprocess: [false]
      preprocess:
        mean: [default]
        std: [default]
  dataloader:
    num_workers: [32]
    prefetch_factor: [2]
    possible_batch_example_nums: [[[2, 1, 4], [1, 2, 4], [8, 2, 1], [16, 1, 1]]]
    val_possible_batch_example_nums: [[[64, 1]]] 
    prompt_types: [["mask"]]
    prompt_choice_level: [["episode"]]
    val_prompt_types: [["mask"]]

other_grids: